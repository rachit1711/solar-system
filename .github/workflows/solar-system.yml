name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18,19,20]
            operating_system: [ubuntu-latest,macos-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos-latest
        runs-on: ${{ matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
    
        - name: Install Dependencies
          run: npm install
        
        - name: Check code coverage
          continue-on-error: true
          run: npm run coverage
    
        - name: Unit Testing
          run: npm test

    docker:
      needs: [unit-testing]
      name: Containerization with Docker
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Dockerhub login
          uses: docker/login-action@v2.2.0
          with: 
            username: ${{vars.DOCKERHUB_USERNAME}} 
            password: ${{vars. DOCKERHUB_PASSWORD}}

        - name: Docker Build for Testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}

        - name: Docker push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}


    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment:
        name: development

      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v4
          with:
            version: v1.28.1
        - uses: azure/k8s-set-context
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG}}'

        - run: kubectl version -o yaml

          
        